name: webapp-ci_cd

on:
  push:
    branches:
      - main

permissions:
  contents: write
  checks: write
  

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Super Linter

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 0 = Ensuring `.git` is complete

      - name: Run Super Linter
        uses: super-linter/super-linter@v6
        env:
          VALIDATE_ALL_CODEBASE: false      # Purpose of this is to unchoke the super linter
          VALIDATE_YAML: true
          VALIDATE_MD: true
          VALIDATE_BASH: true
          VALIDATE_DOCKERFILE: true
          VALIDATE_TYPESCRIPT_ES: true
          VALIDATE_JAVASCRIPT_ES: true
          VALIDATE_JSON: true
          DISABLE_ERRORS: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tests:
    runs-on: ubuntu-latest
    name: Run and Test front and back ends

    steps:
      - name: Checks The Code
        uses: actions/checkout@v4

      - name: Node.js Setup
        uses: actions/setup-node@v4

      - name: Install FrontEnd dependencies
        working-directory: ./angular-realworld-example-app
        run: HUSKY=0 npm install

      - name: FrontEnd test
        working-directory: ./angular-realworld-example-app
        run: npx jest --ci --coverage --runInBand


      - name: Install BackEnd dependencies
        working-directory: ./node-express-realworld-example-app
        run: HUSKY=0 npm install

      - name: BackEnd test
        working-directory: ./node-express-realworld-example-app
        run: npx jest --ci --coverage --runInBand

      - name: Build FrontEnd
        working-directory: ./angular-realworld-example-app
        run: npm run build

      - name: Build BackEnd                                       
        working-directory: ./node-express-realworld-example-app
        run: npm run build


  build-and-push:
    runs-on: ubuntu-latest
    needs: [lint, tests]
    name: Build & push Docker Containers

    steps:
      - name: Check code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 0 = Ensuring `.git` is complete

      - name: Set up docker build
        uses: docker/setup-buildx-action@v3

      - name: Docker Log in
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/webapp:${{ github.sha }}


      - name: Scan Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/webapp:${{ github.sha }}
        